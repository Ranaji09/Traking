<!DOCTYPE html>
<html lang="en">

<head>
     <meta charset="UTF-8">
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
     <title>Traking </title>
     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.css"
          integrity="sha512-h9FcoyWjHcOcmEVkxOfTLnmZFWIH0iZhZT1H2TbOq55xssQGEJHEaIm+PgoUaZbRvQTNTluNOEfb1ZRy6D3BOw=="
          crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>
<style>
     * {
          margin: 0;
          padding: 0;
          box-sizing: border-box;

     }

     html,
     body {
          width: 100%;
          height: 100%;
          background-color: burlywood;
     }

     #map {
          height: 100%;
          width: 100%;
     }
</style>

<body>
     <div id="map"></div>

</body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.js"
     integrity="sha512-BwHfrr4c9kmRkLw6iXFdzcdWV/PGkVgiIyIWLLlTSXzWQzxuSg4DiQUCpauz/EWjgk5TYQqX/kvn9pG1NpYfqg=="
     crossorigin="anonymous" referrerpolicy="no-referrer">
     </script>
<script src="https://cdn.socket.io/4.8.0/socket.io.min.js"
     integrity="sha384-OoIbkvzsFFQAG88r+IqMAjyOtYDPGO0cqK5HF5Uosdy/zUEGySeAzytENMDynREd" crossorigin="anonymous">
     </script>

<script>
     const socket = io();
     if (navigator.geolocation) {
          navigator.geolocation.watchPosition((position) => {
               const { latitude, longitude } = position.coords;
               socket.emit("send-location", { latitude, longitude });
          }, (error) => {
               console.error(error);
          },
               {
                    enableHighAccuracy: true,
                    timeout: 4000,
                    maximumAge: 0,

               }
          );
     }

     const map = L.map("map").setView([0, 0], 20);
     L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
          attribution: "Rana jiðŸ˜ŽðŸ¤žðŸ¤—"
     }).addTo(map);

     const markers = {};
     socket.on("receive-location", (data) => {
          const { id, latitude, longitude } = data;
          map.setView([latitude, longitude], 17);
          if (markers[id]) {
               markers[id].setLatLng([latitude, longitude]);
          } else {
               markers[id] = L.marker([latitude, longitude]).addTo(map);
          }
     });

     socket.on("user-disconneted", (id) => {
          if (markers[id]) {
               map.removeLayer(markers[id]);
               delete markers[id];
          }
     })
</script>

</html>